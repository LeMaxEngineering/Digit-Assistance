import * as FileSystem from 'expo-file-system';
import { sendDocumentEmail } from './emailService';

// Generate CSV string from rows
export function generateCSV(rows, documentData) {
  const header = [
    'Attendance Record',
    '',
    `Company,${documentData.company_name}`,
    `Place,${documentData.place_name || documentData.company_name}`,
    `Date,${new Date(documentData.date).toLocaleDateString()}`,
    `Generated by,${documentData.user?.name || 'User'}`,
    '',
    'Employee Attendance',
    'Name,Time In,Time Out'
  ].join('\n');

  const body = rows.map(r => `${r.name},${r.timeIn || '--:--'},${r.timeOut || '--:--'}`).join('\n');
  
  const footer = [
    '',
    'Generated Information',
    `Generated By,Digital Assistant`,
    `Generated Date,${new Date().toLocaleDateString()}`
  ].join('\n');

  return [header, body, footer].join('\n');
}

// Send email with CSV attachment
export const sendCSVByEmail = async (csvData, email, user, company, place, date) => {
  try {
    // Convert CSV string to buffer
    const csvBuffer = Buffer.from(csvData, 'utf-8');
    
    // Send email with CSV attachment
    return await sendDocumentEmail({
      file: csvBuffer,
      format: 'csv',
      email,
      user,
      company,
      date: date || new Date().toISOString().split('T')[0],
      workers: [],
      place: place || company.name
    });
  } catch (error) {
    console.error('Error sending CSV email:', error);
    throw error;
  }
}; 